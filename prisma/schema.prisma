generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Dialect {
  code        String       @id
  name        String
  description String?
  Vocabulary  Vocabulary[]
  Language    Language[]
  Word        Word[]
}

model Language {
  code    String   @id
  name    String?
  dialect String?
  Dialect Dialect? @relation(fields: [dialect], references: [code], onDelete: Cascade)
  Word    Word[]
}

model Morpheme {
  term           String           @id
  meaning        String?
  partOfSpeech   String?
  PartOfSpeech   PartOfSpeech?    @relation(fields: [partOfSpeech], references: [code], onDelete: Cascade)
  WordToMorpheme WordToMorpheme[]
}

model PartOfSpeech {
  code       String       @id
  name       String
  Vocabulary Vocabulary[]
  Word       Word[]
  Morpheme   Morpheme[]
}

model Word {
  term           String           @id
  language       String?
  dialect        String?
  standard       String?
  root           String?
  partOfSpeech   String?
  english        String?
  PartOfSpeech   PartOfSpeech?    @relation(fields: [partOfSpeech], references: [code], onDelete: Cascade)
  Language       Language?        @relation(fields: [language], references: [code], onDelete: Cascade)
  Dialect        Dialect?         @relation(fields: [dialect], references: [code], onDelete: Cascade)
  WordToMorpheme WordToMorpheme[]
}

model WordToMorpheme {
  word     String
  morpheme String
  Morpheme Morpheme? @relation(fields: [morpheme], references: [term], onDelete: Cascade)
  Word     Word?     @relation(fields: [word], references: [term], onDelete: Cascade)

  @@id([word, morpheme])
}

model Vocabulary {
  id           Int           @id @default(autoincrement())
  malagasy     String
  dialect      String?
  partOfSpeech String?
  english      String
  comment      String?
  PartOfSpeech PartOfSpeech? @relation(fields: [partOfSpeech], references: [code], onDelete: Cascade)
  Dialect      Dialect?      @relation(fields: [dialect], references: [code], onDelete: Cascade)
}
