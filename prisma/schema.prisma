generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Language {
  key         String     @id
  name        String?
  description String?
  alpha2      String?
  Lexeme      Lexeme[]
  WordForm    WordForm[]
}

model Session {
  id        String   @id
  user      String
  expiresAt DateTime
  User      User     @relation(fields: [user], references: [email], onDelete: Cascade)
}

model Topic {
  key    String   @id
  name   String
  Lexeme Lexeme[]
}

model User {
  firstname String?
  lastname  String?
  email     String    @id
  password  String?
  role      String    @default("user")
  status    String    @default("enabled")
  Session   Session[]
}

model Swadesh {
  key       Int       @id @default(autoincrement())
  wordClass String
  term      String
  eng       String
  deu       String?
  fra       String?
  spa       String?
  swa       String?
  mlg       String?
  WordClass WordClass @relation(fields: [wordClass], references: [key], onDelete: Cascade)
}

model WordClass {
  key     String    @id
  name    String
  Lexeme  Lexeme[]
  Swadesh Swadesh[]
}

model Lexeme {
  key       String     @id
  lemma     String
  meaning   String?
  language  String
  wordClass String
  topic     String?
  english   String?
  comment   String?
  level     String?
  WordClass WordClass  @relation(fields: [wordClass], references: [key], onDelete: Cascade)
  Language  Language   @relation(fields: [language], references: [key], onDelete: Cascade)
  Topic     Topic?     @relation(fields: [topic], references: [key], onDelete: Cascade)
  WordForm  WordForm[]

  @@unique([lemma, meaning, wordClass])
}

model WordForm {
  language String
  lexeme   String?
  token    String
  case     String?
  gender   String?
  mood     String?
  number   String?
  person   String?
  tense    String?
  Language Language @relation(fields: [language], references: [key], onDelete: Cascade)
  Lexeme   Lexeme?  @relation(fields: [lexeme], references: [key], onDelete: Cascade)

  @@id([language, token])
}
